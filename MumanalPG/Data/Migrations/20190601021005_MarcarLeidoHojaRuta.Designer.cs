// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MumanalPG.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MumanalPG.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190601021005_MarcarLeidoHojaRuta")]
    partial class MarcarLeidoHojaRuta
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.ActivoAsignacion", b =>
                {
                    b.Property<int>("IdActivoFijo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodigoActivoFijo");

                    b.Property<string>("CodigoAdministrativo");

                    b.Property<string>("CodigoRube");

                    b.Property<decimal>("CostoInicial");

                    b.Property<decimal>("DepreciacionAcumulada");

                    b.Property<decimal>("DepreciacionAcumuladaInicial");

                    b.Property<decimal>("DepreciacionGestion");

                    b.Property<string>("Descripcion");

                    b.Property<decimal>("FactorActualizacion");

                    b.Property<DateTime>("FechaIncorporacion");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdAlmacenInventario");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBienes");

                    b.Property<int>("IdEstadoActivoFijo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdOrganismoFinanciador");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("TiempoVidaEnAnios");

                    b.Property<int>("TiempoVidaEnDias");

                    b.Property<decimal>("Ufv");

                    b.Property<decimal>("ValorActual");

                    b.Property<decimal>("ValorNeto");

                    b.HasKey("IdActivoFijo");

                    b.ToTable("ActivoAsignacion","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.ActivoTransferencia", b =>
                {
                    b.Property<int>("IdActivoTransferencia")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<DateTime>("FechaTransferencia");

                    b.Property<int>("IdActivoFijo");

                    b.Property<int>("IdAlmacen");

                    b.Property<int>("IdAlmacenDestino");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBeneficiarioDestino");

                    b.Property<int>("IdBeneficiarioEncargado");

                    b.Property<int>("IdEstadoActivoFijo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUnidadEjecutora");

                    b.Property<int>("IdUnidadEjecutoraDestino");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Observacion");

                    b.HasKey("IdActivoTransferencia");

                    b.ToTable("ActivoTransferencia","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.Almacen", b =>
                {
                    b.Property<int>("IdAlmacen")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdBarrio");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdCalle");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdMunicipio");

                    b.Property<int>("IdTipoAlmacen");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("NumeroDepartamento");

                    b.Property<string>("NumeroEdificio");

                    b.Property<string>("NumeroPiso");

                    b.Property<string>("Observacion");

                    b.Property<string>("Telefono");

                    b.HasKey("IdAlmacen");

                    b.ToTable("Almacen","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.AlmacenIngreso", b =>
                {
                    b.Property<int>("IdAlmacenIngreso")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CantidadIngreso");

                    b.Property<string>("Concepto");

                    b.Property<decimal>("CostoUnitarioBs");

                    b.Property<DateTime>("FechaIngreso");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<int>("IdAlmacen");

                    b.Property<int>("IdAlmacenInventario");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBeneficiarioAlmacenero");

                    b.Property<int>("IdBienes");

                    b.Property<int>("IdCompraContratacionBien");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("NumeroDocumento");

                    b.Property<string>("NumeroLote");

                    b.Property<decimal>("SubTotalCompraBs");

                    b.Property<decimal>("SubTotalCompraDolares");

                    b.HasKey("IdAlmacenIngreso");

                    b.ToTable("AlmacenIngreso","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.AlmacenInventario", b =>
                {
                    b.Property<int>("IdAlmacenInventario")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdAlmacen");

                    b.Property<int>("IdBienes");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<decimal>("StockActual");

                    b.Property<decimal>("StockIngreso");

                    b.Property<decimal>("StockSalida");

                    b.Property<decimal>("TotalCompraBs");

                    b.Property<decimal>("TotalCompraDolares");

                    b.Property<decimal>("TotalVentaBs");

                    b.Property<decimal>("TotalVentaDolares");

                    b.Property<decimal>("UtilidadBs");

                    b.Property<decimal>("UtilidadDolares");

                    b.HasKey("IdAlmacenInventario");

                    b.ToTable("AlmacenInventario","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.AlmacenSalida", b =>
                {
                    b.Property<int>("IdAlmacenSalida")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CantidadSalida");

                    b.Property<string>("Concepto");

                    b.Property<decimal>("CostoUnitarioBs");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<DateTime>("FechaSalida");

                    b.Property<DateTime>("FechaVencimiento");

                    b.Property<int>("IdAlmacen");

                    b.Property<int>("IdAlmacenInventario");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBeneficiarioAlmacenero");

                    b.Property<int>("IdBienes");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("NumeroDocumento");

                    b.Property<string>("NumeroLote");

                    b.Property<decimal>("SubTotalCompraBs");

                    b.Property<decimal>("SubTotalCompraDolares");

                    b.HasKey("IdAlmacenSalida");

                    b.ToTable("AlmacenSalida","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.Bienes", b =>
                {
                    b.Property<int>("IdBienes")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CodigoBien");

                    b.Property<string>("CodigoBienAnterior");

                    b.Property<string>("Descripcion");

                    b.Property<string>("DescripcionAnterior");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<string>("Foto");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdEstadoVigente");

                    b.Property<int>("IdModelo");

                    b.Property<int>("IdPais");

                    b.Property<int>("IdPartidaGasto");

                    b.Property<int>("IdRotacionBien");

                    b.Property<int>("IdUnidadMedida");

                    b.Property<int>("IdUnidadMedidaEmpaque");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("Kit");

                    b.Property<string>("NombreArchivo");

                    b.Property<string>("Observacion");

                    b.Property<decimal>("PrecioReferenciaCompra");

                    b.Property<decimal>("PrecioVentaBase");

                    b.Property<decimal>("PrecioVentaFinal");

                    b.Property<decimal>("StockActual");

                    b.Property<decimal>("StockIngreso");

                    b.Property<decimal>("StockInicial");

                    b.Property<decimal>("StockMinimo");

                    b.Property<decimal>("StockSalida");

                    b.Property<decimal>("TotalAcumuladoCompraBs");

                    b.Property<decimal>("TotalAcumuladoVentaBs");

                    b.Property<decimal>("TotalUtilidadBs");

                    b.HasKey("IdBienes");

                    b.ToTable("Bienes","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.CompraContratacion", b =>
                {
                    b.Property<int>("IdCompraContratacion")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArchivoRespaldo");

                    b.Property<bool>("ArchivoRespaldoCargado");

                    b.Property<string>("CiteTramite");

                    b.Property<string>("Concepto");

                    b.Property<DateTime>("FechaAprueba");

                    b.Property<DateTime>("FechaCompra");

                    b.Property<DateTime>("FechaFinal");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<string>("Gestion");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBeneficiarioResponsable");

                    b.Property<int>("IdCompraSolicitud");

                    b.Property<int>("IdDepartamento");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdModalidadContratacion");

                    b.Property<int>("IdPoa");

                    b.Property<int>("IdProceso");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("IdUsuarioAprueba");

                    b.Property<int>("MesNumero");

                    b.Property<int>("NumeroDocumento");

                    b.Property<string>("Observaciones");

                    b.HasKey("IdCompraContratacion");

                    b.ToTable("CompraContratacion","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.CompraContratacionBien", b =>
                {
                    b.Property<int>("IdCompraContratacionBien")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CantidadCompra");

                    b.Property<decimal>("CantidadRecibida");

                    b.Property<decimal>("DescuentoCompraBs");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdBienes");

                    b.Property<int>("IdCompraContratacion");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<decimal>("IdTipoCambio");

                    b.Property<int>("IdTipoMoneda");

                    b.Property<int>("IdUnidadMedida");

                    b.Property<int>("IdUnidadMedidaEmpaque");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Observaciones");

                    b.Property<decimal>("Precio87delTotalBs");

                    b.Property<decimal>("PrecioTotalCompraBs");

                    b.Property<decimal>("PrecioTotalCompraDolares");

                    b.Property<decimal>("PrecioUnitarioCompraBs");

                    b.HasKey("IdCompraContratacionBien");

                    b.ToTable("CompraContratacionBien","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.CompraContratacionCotiza", b =>
                {
                    b.Property<int>("IdCompraContratacionCotiza")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CiteCarta");

                    b.Property<DateTime>("FechaCotiza");

                    b.Property<DateTime>("FechaEstimadaCompra");

                    b.Property<DateTime>("FechaLimiteCotizacion");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdCompraContratacion");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdPoa");

                    b.Property<int>("IdProceso");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("NombreProveedorQueCotiza");

                    b.Property<string>("NumeroCotizacionProveedor");

                    b.Property<int>("NumeroDocumento");

                    b.Property<string>("NumeroVentaPliego");

                    b.HasKey("IdCompraContratacionCotiza");

                    b.ToTable("CompraContratacionCotiza","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.CompraCronograma", b =>
                {
                    b.Property<int>("IdCompraCronograma")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CompraTotalBs");

                    b.Property<decimal>("CompraTotalDolares");

                    b.Property<string>("Descripcion");

                    b.Property<decimal>("DescuentoBs");

                    b.Property<bool>("EmiteFactura");

                    b.Property<DateTime>("FechaCronograma");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdCompraContratacion");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdPoa");

                    b.Property<int>("IdProceso");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Literal");

                    b.Property<decimal>("MontoBs");

                    b.Property<decimal>("MontoDolares");

                    b.Property<int>("NumeroDocumento");

                    b.Property<decimal>("TipoCambio");

                    b.HasKey("IdCompraCronograma");

                    b.ToTable("CompraCronograma","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.CompraSolicitud", b =>
                {
                    b.Property<int>("IdCompraSolicitud")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ArchivoCargado");

                    b.Property<string>("CiteTramite");

                    b.Property<int>("CorrelativoUnidad");

                    b.Property<DateTime>("FechaAprueba");

                    b.Property<DateTime>("FechaRecepcionSolicitud");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<DateTime>("FechaSolicitud");

                    b.Property<string>("Gestion");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBeneficiarioResponsable");

                    b.Property<int>("IdDepartamento");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdPoa");

                    b.Property<int>("IdProceso");

                    b.Property<int>("IdUnidadEjecutora");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("IdUsuarioAprueba");

                    b.Property<string>("Justificacion");

                    b.Property<int>("MesNumero");

                    b.Property<int>("NumeroDocumento");

                    b.Property<string>("Observaciones");

                    b.Property<string>("PathArchivo");

                    b.HasKey("IdCompraSolicitud");

                    b.ToTable("CompraSolicitud","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.CompraSolicitudBien", b =>
                {
                    b.Property<int>("IdCompraSolicitudBien")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CantidadAprobada");

                    b.Property<decimal>("CantidadPorEmpaque");

                    b.Property<decimal>("CantidadSolicitada");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdBienes");

                    b.Property<int>("IdCompraSolicitud");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdModelo");

                    b.Property<int>("IdPais");

                    b.Property<int>("IdTipoMoneda");

                    b.Property<int>("IdUnidadMedida");

                    b.Property<int>("IdUnidadMedidaEmpaque");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Observaciones");

                    b.Property<decimal>("PrecioTotalReferencial");

                    b.Property<decimal>("PrecioUnitario");

                    b.HasKey("IdCompraSolicitudBien");

                    b.ToTable("CompraSolicitudBien","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.Administra.TipoAlmacen", b =>
                {
                    b.Property<int>("IdTipoAlmacen")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.HasKey("IdTipoAlmacen");

                    b.ToTable("TipoAlmacen","Administra");
                });

            modelBuilder.Entity("MumanalPG.Models.AdministraParam.Grupo", b =>
                {
                    b.Property<int>("IdGrupo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.HasKey("IdGrupo");

                    b.ToTable("Grupo","AdministraParam");
                });

            modelBuilder.Entity("MumanalPG.Models.AdministraParam.SubGrupo", b =>
                {
                    b.Property<int>("IdSubgrupo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("IdGrupo");

                    b.HasKey("IdSubgrupo");

                    b.ToTable("SubGrupo","AdministraParam");
                });

            modelBuilder.Entity("MumanalPG.Models.Appointments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AppointmentDate");

                    b.Property<string>("CustomerEmail");

                    b.Property<string>("CustomerName");

                    b.Property<string>("CustomerPhoneNumber");

                    b.Property<string>("SalesPersonId");

                    b.Property<bool>("isConfirmed");

                    b.HasKey("Id");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.Documento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaFuncionarioCC")
                        .HasMaxLength(50);

                    b.Property<string>("AreaFuncionarioDestino")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AreaFuncionarioOrigen")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AreaFuncionarioVia")
                        .HasMaxLength(50);

                    b.Property<string>("CargoFuncionarioCC")
                        .HasMaxLength(50);

                    b.Property<string>("CargoFuncionarioDestino")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CargoFuncionarioOrigen")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("CargoFuncionarioVia")
                        .HasMaxLength(50);

                    b.Property<string>("Cite");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Correlativo");

                    b.Property<DateTime>("Fecha");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("FuncionarioCCId");

                    b.Property<int>("FuncionarioDestinoId");

                    b.Property<int>("FuncionarioOrigenId");

                    b.Property<int>("FuncionarioViaId");

                    b.Property<int>("Gestion");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<short>("TipoId");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioCCId");

                    b.HasIndex("FuncionarioDestinoId");

                    b.HasIndex("FuncionarioOrigenId");

                    b.HasIndex("FuncionarioViaId");

                    b.HasIndex("TipoId");

                    b.ToTable("Documentos","Correspondencia");
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.HojaRuta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CiteFecha");

                    b.Property<string>("CiteHojaRuta")
                        .IsRequired();

                    b.Property<string>("CiteTramite")
                        .IsRequired();

                    b.Property<int>("DocumentoId");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("Gestion");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("NroFojas");

                    b.Property<int>("OrigenId");

                    b.Property<string>("Prioridad")
                        .IsRequired();

                    b.Property<string>("Referencia")
                        .IsRequired();

                    b.Property<int>("SolicitudCodigo");

                    b.Property<string>("TipoHojaRuta");

                    b.Property<int>("UnidadEjecutoraId");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId")
                        .IsUnique();

                    b.HasIndex("OrigenId");

                    b.HasIndex("UnidadEjecutoraId")
                        .IsUnique();

                    b.ToTable("HojaRuta","Correspondencia");
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.HojaRutaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AreaDestinoId");

                    b.Property<int>("AreaOrigenId");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("FunDstId");

                    b.Property<int>("FunOrgId");

                    b.Property<int>("HojaRutaId");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<bool>("Leido");

                    b.Property<int>("PlazoDias");

                    b.Property<string>("Proveido")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AreaDestinoId");

                    b.HasIndex("AreaOrigenId");

                    b.HasIndex("FunDstId");

                    b.HasIndex("FunOrgId");

                    b.HasIndex("HojaRutaId");

                    b.ToTable("HojaRutaDetalle","Correspondencia");
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.HRDetalleInstrucciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HRDetalleId");

                    b.Property<int>("InstruccionId");

                    b.HasKey("Id");

                    b.HasIndex("HRDetalleId");

                    b.HasIndex("InstruccionId");

                    b.ToTable("HRDetalleInstrucciones","Correspondencia");
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.Instrucciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100);

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Instrucciones","Correspondencia");
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.TipoDocumento", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento","Correspondencia");
                });

            modelBuilder.Entity("MumanalPG.Models.FinanzasParam.Partida", b =>
                {
                    b.Property<int>("IdPartida")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<int>("Gestion");

                    b.Property<short>("IdSubGrupo");

                    b.Property<short>("VidaUtil");

                    b.HasKey("IdPartida");

                    b.ToTable("Partida","FinanzasParam");
                });

            modelBuilder.Entity("MumanalPG.Models.Generales.Departamento", b =>
                {
                    b.Property<int>("IdDepartamento")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdPais");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Sigla");

                    b.HasKey("IdDepartamento");

                    b.ToTable("Departamento","Generales");
                });

            modelBuilder.Entity("MumanalPG.Models.Generales.fBuscaId", b =>
                {
                    b.Property<int>("IdUnidadEjecutora")
                        .ValueGeneratedOnAdd();

                    b.HasKey("IdUnidadEjecutora");

                    b.ToTable("Generales_fBuscaId");
                });

            modelBuilder.Entity("MumanalPG.Models.Generales.fRetornaCadena", b =>
                {
                    b.Property<string>("Cadena")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Cadena");

                    b.ToTable("Generales_fRetornaCadena");
                });

            modelBuilder.Entity("MumanalPG.Models.Generales.fRetornaEntero", b =>
                {
                    b.Property<int>("Entero")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Entero");

                    b.ToTable("Generales_fRetornaEntero");
                });

            modelBuilder.Entity("MumanalPG.Models.Planificacion.HojaRutaDocumentos", b =>
                {
                    b.Property<int>("IdHojaRutaDocumentos")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CiteRespaldo");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<string>("HoraRegistro");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdHojaRuta");

                    b.Property<int>("IdUsuario");

                    b.HasKey("IdHojaRutaDocumentos");

                    b.ToTable("HojaRutaDocumentos","Planificacion");
                });

            modelBuilder.Entity("MumanalPG.Models.Planificacion.HojaRutaInstrucciones", b =>
                {
                    b.Property<int>("IdHojaRutaInstruccion")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<string>("HoraRegistro");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdHojaRutaDetalle");

                    b.Property<int>("IdInstruccion");

                    b.Property<int>("IdUsuario");

                    b.HasKey("IdHojaRutaInstruccion");

                    b.ToTable("HojaRutaInstrucciones","Planificacion");
                });

            modelBuilder.Entity("MumanalPG.Models.Planificacion.PresupuestoFormulacion", b =>
                {
                    b.Property<int>("IdPresupuestoFormulacion")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("EjecucionAnulado");

                    b.Property<decimal>("EjecucionCompromiso");

                    b.Property<decimal>("EjecucionDevengado");

                    b.Property<decimal>("EjecucionDevuelto");

                    b.Property<decimal>("EjecucionPagado");

                    b.Property<decimal>("EjecucionRevertido");

                    b.Property<DateTime>("FechaAprueba");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<string>("Gestion");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBeneficiarioResponsable");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoPpto");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdEstructuraProgramatica");

                    b.Property<int>("IdOrganismoFinanciador");

                    b.Property<int>("IdPartidaGasto");

                    b.Property<int>("IdUnidadEjecutora");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("IdUsuarioAprueba");

                    b.Property<decimal>("PptoAdiciones");

                    b.Property<decimal>("PptoFormulado");

                    b.Property<decimal>("PptoModificaciones");

                    b.Property<decimal>("PptoVigente");

                    b.HasKey("IdPresupuestoFormulacion");

                    b.ToTable("PresupuestoFormulacion","Planificacion");
                });

            modelBuilder.Entity("MumanalPG.Models.Planificacion.PresupuestoModificaciones", b =>
                {
                    b.Property<int>("IdPresupuestoModificaciones")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FechaAutorizacion");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<string>("Gestion");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdPoa");

                    b.Property<int>("IdPoaDestino");

                    b.Property<int>("IdPresupuestoFormulacion");

                    b.Property<int>("IdPresupuestoFormulacionDestino");

                    b.Property<int>("IdUsuario");

                    b.Property<decimal>("MontoDestino");

                    b.Property<decimal>("MontoOrigen");

                    b.Property<int>("NumeroRespaldo");

                    b.HasKey("IdPresupuestoModificaciones");

                    b.ToTable("PresupuestoModificaciones","Planificacion");
                });

            modelBuilder.Entity("MumanalPG.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Available");

                    b.Property<string>("Image");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.Property<int>("ProductTypeId");

                    b.Property<string>("ShadeColor");

                    b.Property<int>("SpecialTagsID");

                    b.HasKey("Id");

                    b.HasIndex("ProductTypeId");

                    b.HasIndex("SpecialTagsID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MumanalPG.Models.ProductsSelectedForAppointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppointmentId");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsSelectedForAppointment");
                });

            modelBuilder.Entity("MumanalPG.Models.ProductTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("MumanalPG.Models.RoleViewModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RoleViewModel");
                });

            modelBuilder.Entity("MumanalPG.Models.RRHH.Beneficiario", b =>
                {
                    b.Property<int>("IdBeneficiario")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Denominacion");

                    b.Property<string>("DepartamentoSigla");

                    b.Property<string>("DocumentoIdentidad");

                    b.Property<string>("DomicilioLegal");

                    b.Property<string>("EdificioNumero");

                    b.Property<string>("EdificioNumeroDepto");

                    b.Property<string>("EdificioNumeroPiso");

                    b.Property<string>("EmailOficina");

                    b.Property<string>("EmailPersonal");

                    b.Property<string>("EsDeudor");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<DateTime?>("FechaRegistro");

                    b.Property<int?>("IdBeneficiarioClasificacion");

                    b.Property<int?>("IdCalle");

                    b.Property<int?>("IdDocumentoRespaldo");

                    b.Property<int?>("IdEdificio");

                    b.Property<int?>("IdEstadoRegistro");

                    b.Property<int?>("IdMunicipio");

                    b.Property<int?>("IdUsuario");

                    b.Property<string>("Iniciales");

                    b.Property<string>("Nit");

                    b.Property<string>("PrimerApellido");

                    b.Property<string>("PrimerNombre");

                    b.Property<int>("PuestoId");

                    b.Property<string>("SegundoApellido");

                    b.Property<string>("TelefonoCelular");

                    b.Property<string>("TelefonoFijo");

                    b.Property<string>("TelefonoOficina");

                    b.HasKey("IdBeneficiario");

                    b.HasIndex("PuestoId")
                        .IsUnique();

                    b.ToTable("Beneficiario","RRHH");
                });

            modelBuilder.Entity("MumanalPG.Models.RRHH.Puesto", b =>
                {
                    b.Property<int>("IdPuesto")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<bool>("EsDePlanilla");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<string>("Gestion");

                    b.Property<int>("IdCargo");

                    b.Property<int>("IdDepartamento");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUnidadEjecutora");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("Item");

                    b.Property<string>("Sigla");

                    b.Property<bool>("Vacante");

                    b.HasKey("IdPuesto");

                    b.HasIndex("IdUnidadEjecutora");

                    b.ToTable("Puesto","RRHH");
                });

            modelBuilder.Entity("MumanalPG.Models.RRHH.UnidadEjecutora", b =>
                {
                    b.Property<int>("IdUnidadEjecutora")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CantidadLimite");

                    b.Property<string>("Descripcion");

                    b.Property<bool?>("EsUltimoNivel");

                    b.Property<DateTime?>("FechaRegistro");

                    b.Property<string>("Gestion");

                    b.Property<int?>("IdEstadoRegistro");

                    b.Property<int?>("IdMunicipio");

                    b.Property<int>("IdUnidadEjecutoraPadre");

                    b.Property<int?>("IdUsuario");

                    b.Property<decimal?>("MontoLimite");

                    b.Property<int?>("Nivel");

                    b.Property<string>("Sigla");

                    b.HasKey("IdUnidadEjecutora");

                    b.ToTable("UnidadEjecutora","RRHH");
                });

            modelBuilder.Entity("MumanalPG.Models.RRHH.vPersona", b =>
                {
                    b.Property<int>("IdBeneficiario")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Denominacion");

                    b.Property<string>("DocumentoIdentidad");

                    b.HasKey("IdBeneficiario");

                    b.ToTable("RRHH_vPersona");
                });

            modelBuilder.Entity("MumanalPG.Models.RRHHParam.TipoBeneficiario", b =>
                {
                    b.Property<short>("IdTipoBeneficiario")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activo");

                    b.Property<string>("Denominacion")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("IdTipoBeneficiario");

                    b.ToTable("TipoBeneficiario","RRHHParam");
                });

            modelBuilder.Entity("MumanalPG.Models.Seguridad.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("Role");

                    b.Property<string>("RoleId");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.HasKey("Id");

                    b.ToTable("Seguridad_Usuario");
                });

            modelBuilder.Entity("MumanalPG.Models.Seguridad.UsuarioUnidadEjecutora", b =>
                {
                    b.Property<short>("IdUsuario")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("IdUnidadEjecutora");

                    b.HasKey("IdUsuario");

                    b.ToTable("UsuarioUnidadEjecutora","Seguridad");
                });

            modelBuilder.Entity("MumanalPG.Models.SpecialTags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("SpecialTags");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.DocumentoRespaldo", b =>
                {
                    b.Property<int>("IdDocumentoRespaldo")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<bool>("EsUsadoComoRequisito");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdDocumentoClasificacion");

                    b.Property<int>("IdDocumentoFormato");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdFrecuenciaUso");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("LugarFisicoArchivado");

                    b.Property<int>("NumeroCopias");

                    b.Property<string>("Sigla");

                    b.HasKey("IdDocumentoRespaldo");

                    b.ToTable("DocumentoRespaldo","Ventas");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.pVerificaLimite", b =>
                {
                    b.Property<short>("CantidadLimite")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("MontoLimite");

                    b.HasKey("CantidadLimite");

                    b.ToTable("Ventas_pVerificaLimite");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.TablaPDF", b =>
                {
                    b.Property<int>("IdTablaPDF")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Cargado");

                    b.Property<int>("IdDocumento");

                    b.Property<string>("RutaDocumento");

                    b.HasKey("IdTablaPDF");

                    b.ToTable("TablaPDF","Ventas");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.vContratacion", b =>
                {
                    b.Property<int>("IdVentaContratacion")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Beneficiario");

                    b.Property<int>("CorrelativoUnidad");

                    b.Property<string>("Estado");

                    b.Property<DateTime>("FechaVenta");

                    b.Property<string>("Garante");

                    b.Property<string>("Gestion");

                    b.Property<string>("IdAsrSiver");

                    b.Property<string>("UnidadEjecutora");

                    b.HasKey("IdVentaContratacion");

                    b.ToTable("vContratacion","Ventas");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.VentaContratacion", b =>
                {
                    b.Property<int>("IdVentaContratacion")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArchivoRespaldo");

                    b.Property<bool>("ArchivoRespaldoCargado");

                    b.Property<decimal>("CantidadTotal");

                    b.Property<string>("CiteTramite");

                    b.Property<string>("Concepto");

                    b.Property<int>("CorrelativoUnidad");

                    b.Property<DateTime>("FechaAprueba");

                    b.Property<DateTime>("FechaFinal");

                    b.Property<DateTime>("FechaInicio");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<DateTime>("FechaVenta");

                    b.Property<string>("Gestion");

                    b.Property<string>("IdAsrSiver")
                        .IsRequired();

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBeneficiarioGarante");

                    b.Property<int>("IdBeneficiarioResponsable");

                    b.Property<int>("IdDepartamento");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdPoa");

                    b.Property<int>("IdProceso");

                    b.Property<int>("IdProcesoNivel2");

                    b.Property<int>("IdTipoMoneda");

                    b.Property<int>("IdUnidadEjecutora");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("IdUsuarioAprueba");

                    b.Property<int>("IdVentaSolicitud");

                    b.Property<int>("IdVentaTarifario");

                    b.Property<string>("Literal");

                    b.Property<int>("MesInicioCronograma");

                    b.Property<int>("MesNumero");

                    b.Property<int>("NumeroDocumento");

                    b.Property<string>("Observaciones");

                    b.Property<int>("PlazoMeses");

                    b.Property<decimal>("TipoCambio");

                    b.Property<decimal>("TotalBs");

                    b.Property<decimal>("TotalDolares");

                    b.Property<decimal>("TotalPrevisionBs");

                    b.HasKey("IdVentaContratacion");

                    b.ToTable("VentaContratacion","Ventas");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.VentaRequisito", b =>
                {
                    b.Property<int>("IdVentaRequisito")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ArchivoCargado");

                    b.Property<bool>("DocumentoEntregado");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdDocumentoFormato");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("IdVentaContratacion");

                    b.Property<string>("PathArchivo");

                    b.HasKey("IdVentaRequisito");

                    b.ToTable("VentaRequisito","Ventas");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.VentaSolicitud", b =>
                {
                    b.Property<int>("IdVentaSolicitud")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ArchivoCargado");

                    b.Property<string>("CiteTramite");

                    b.Property<int>("CorrelativoUnidad");

                    b.Property<DateTime>("FechaAprueba");

                    b.Property<DateTime>("FechaRecepcionSolicitud");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<DateTime>("FechaSolicitud");

                    b.Property<string>("Gestion");

                    b.Property<int>("IdBeneficiario");

                    b.Property<int>("IdBeneficiarioResponsable");

                    b.Property<int>("IdDepartamento");

                    b.Property<int>("IdDocumentoRespaldo");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdPoa");

                    b.Property<int>("IdProceso");

                    b.Property<int>("IdUnidadEjecutora");

                    b.Property<int>("IdUsuario");

                    b.Property<int>("IdUsuarioAprueba");

                    b.Property<string>("Justificacion");

                    b.Property<int>("MesNumero");

                    b.Property<int>("NumeroDocumento");

                    b.Property<string>("Observaciones");

                    b.Property<string>("PathArchivo");

                    b.HasKey("IdVentaSolicitud");

                    b.ToTable("VentaSolicitud","Ventas");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.VentaTarifario", b =>
                {
                    b.Property<int>("IdVentaTarifario")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion");

                    b.Property<DateTime>("FechaRegistro");

                    b.Property<int>("IdBeneficiarioCategoria");

                    b.Property<int>("IdEstadoRegistro");

                    b.Property<int>("IdProcesoNivel2");

                    b.Property<int>("IdUsuario");

                    b.Property<decimal>("InteresBs");

                    b.Property<int>("NumeroPeriodos");

                    b.Property<int>("NumeroCuotas");

                    b.Property<decimal>("Porcentaje");

                    b.Property<decimal>("ValorFinalBs");

                    b.Property<decimal>("ValorInicialBs");

                    b.HasKey("IdVentaTarifario");

                    b.ToTable("VentaTarifario","Ventas");
                });

            modelBuilder.Entity("MumanalPG.Models.Ventas.vRequisito", b =>
                {
                    b.Property<int>("IdVentaRequisito")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ArchivoCargado");

                    b.Property<string>("Descripcion");

                    b.Property<bool>("EsObligatorio");

                    b.Property<int>("IdVentaContratacion");

                    b.Property<short>("Orden");

                    b.Property<string>("PathArchivo");

                    b.HasKey("IdVentaRequisito");

                    b.ToTable("vRequisito","Ventas");
                });

            modelBuilder.Entity("MumanalPG.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int>("AspNetUserId");

                    b.Property<int>("IdUsuario");

                    b.Property<string>("Name");

                    b.HasIndex("AspNetUserId")
                        .IsUnique();

                    b.ToTable("ApplicationUser");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.Appointments", b =>
                {
                    b.HasOne("MumanalPG.Models.ApplicationUser", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPersonId");
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.Documento", b =>
                {
                    b.HasOne("MumanalPG.Models.RRHH.Beneficiario", "FuncionarioCC")
                        .WithMany("DocumentosCC")
                        .HasForeignKey("FuncionarioCCId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.RRHH.Beneficiario", "FuncionarioDestino")
                        .WithMany("DocumentosRecibidos")
                        .HasForeignKey("FuncionarioDestinoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.RRHH.Beneficiario", "FuncionarioOrigen")
                        .WithMany("DocumentosCreados")
                        .HasForeignKey("FuncionarioOrigenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.RRHH.Beneficiario", "FuncionarioVia")
                        .WithMany("DocumentosVia")
                        .HasForeignKey("FuncionarioViaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.Correspondencia.TipoDocumento", "Tipo")
                        .WithMany("Documentos")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.HojaRuta", b =>
                {
                    b.HasOne("MumanalPG.Models.Correspondencia.Documento", "Documento")
                        .WithOne("HojaRuta")
                        .HasForeignKey("MumanalPG.Models.Correspondencia.HojaRuta", "DocumentoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.RRHH.Beneficiario", "Origen")
                        .WithMany("HojasRuta")
                        .HasForeignKey("OrigenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.RRHH.UnidadEjecutora", "UnidadEjecutora")
                        .WithOne("HojaRuta")
                        .HasForeignKey("MumanalPG.Models.Correspondencia.HojaRuta", "UnidadEjecutoraId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.HojaRutaDetalle", b =>
                {
                    b.HasOne("MumanalPG.Models.RRHH.UnidadEjecutora", "AreaDestino")
                        .WithMany("Destinados")
                        .HasForeignKey("AreaDestinoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.RRHH.UnidadEjecutora", "AreaOrigen")
                        .WithMany("Originados")
                        .HasForeignKey("AreaOrigenId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.RRHH.Beneficiario", "FunDst")
                        .WithMany("Destinados")
                        .HasForeignKey("FunDstId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.RRHH.Beneficiario", "FunOrg")
                        .WithMany("Originados")
                        .HasForeignKey("FunOrgId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.Correspondencia.HojaRuta", "HojaRuta")
                        .WithMany("Derivaciones")
                        .HasForeignKey("HojaRutaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.Correspondencia.HRDetalleInstrucciones", b =>
                {
                    b.HasOne("MumanalPG.Models.Correspondencia.HojaRutaDetalle", "HRDetalle")
                        .WithMany("HRDetalleInstrucciones")
                        .HasForeignKey("HRDetalleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.Correspondencia.Instrucciones", "Instruccion")
                        .WithMany("HRDetalleInstrucciones")
                        .HasForeignKey("InstruccionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.Products", b =>
                {
                    b.HasOne("MumanalPG.Models.ProductTypes", "ProductTypes")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.SpecialTags", "SpecialTags")
                        .WithMany()
                        .HasForeignKey("SpecialTagsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.ProductsSelectedForAppointment", b =>
                {
                    b.HasOne("MumanalPG.Models.Appointments", "Appointments")
                        .WithMany()
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MumanalPG.Models.Products", "Products")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.RRHH.Beneficiario", b =>
                {
                    b.HasOne("MumanalPG.Models.RRHH.Puesto", "Puesto")
                        .WithOne("Beneficiario")
                        .HasForeignKey("MumanalPG.Models.RRHH.Beneficiario", "PuestoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.RRHH.Puesto", b =>
                {
                    b.HasOne("MumanalPG.Models.RRHH.UnidadEjecutora", "UnidadEjecutora")
                        .WithMany("Puestos")
                        .HasForeignKey("IdUnidadEjecutora")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MumanalPG.Models.ApplicationUser", b =>
                {
                    b.HasOne("MumanalPG.Models.RRHH.Beneficiario", "Funcionario")
                        .WithOne("AspNetUser")
                        .HasForeignKey("MumanalPG.Models.ApplicationUser", "AspNetUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}

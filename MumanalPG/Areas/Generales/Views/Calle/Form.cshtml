@model MumanalPG.Models.Generales.Calle
<form asp-action="@ViewData["Action"]">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    @{
        string hasError = "has-danger";
        string stringErrors = "";
        if (ViewData.ModelState.IsValid) { hasError = ""; }
        else
        {
            var errorList = ViewData.ModelState.Where(x => x.Value.Errors.Count > 0).ToDictionary(kvp => kvp.Key);
            stringErrors = String.Join(",", errorList.Select(x => x.Key));
        }
    }
    <input name="IsValid" type="hidden" value="@ViewData.ModelState.IsValid.ToString()" />
    <input type="hidden" asp-for="IdCalle" />
    <div class="form-group m-b-40 @if(stringErrors.Contains("IdBarrio")){@hasError}">
        @Html.LabelFor(m => m.IdBarrio, new { @class = "form-control-label" }) 
        <br>
        @* @Html.DropDownList("Barrio", ViewBag.Barrio, "Sin asignar", new { @class = "form-control" }) *@
       <select asp-for="IdBarrio" class="form-control"
               asp-items="@(new SelectList(ViewBag.Barrio, "IdBarrio", "Descripcion"))">
       </select>
    </div>
    <div class="form-group m-b-40 @if(stringErrors.Contains("Descripcion")){@hasError}">
        @Html.LabelFor(m => m.Descripcion, new { @class = "form-control-label" }) 
        @Html.TextBoxFor(m => m.Descripcion, new { @class = "form-control" })
        <span asp-validation-for="Descripcion" class="text-danger"></span>
    </div>
    <div class="form-group m-b-40 @if(stringErrors.Contains("IdCalleTipo")){@hasError}">
        @Html.LabelFor(m => m.IdCalleTipo, new { @class = "form-control-label" }) 
        <br>
        @* @Html.DropDownList("CalleTipo", ViewBag.CalleTipo, "Sin asignar", new { @class = "form-control" }) *@
       <select asp-for="IdCalleTipo" class="form-control"
               asp-items="@(new SelectList(ViewBag.CalleTipo, "IdCalleTipo", "Descripcion"))">
       </select>
    </div>
</form>
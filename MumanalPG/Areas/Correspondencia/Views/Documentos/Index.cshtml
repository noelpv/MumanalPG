@model ReflectionIT.Mvc.Paging.PagingList<MumanalPG.Models.Correspondencia.Documento>
@using MumanalPG.Models.Correspondencia
@using MumanalPG.Utility
@using ReflectionIT.Mvc.Paging
@addTagHelper *, ReflectionIT.Mvc.Paging
@{
    ViewData["Title"] = "Documentos";
    OptionPartial options = new OptionPartial();
    string intro_msg_search = "Puede buscar un Documento introduciendo el CITE o la Referencia en este campo, " +
                              "luego presionar la tecla <b>'Enter'</b> o el botón <button class='btn-sm btn-secondary'>" +
                              "<i class='fas fa-search'></i></button>";
}
<div class="row">
    <div class=" col-6 text-left">
        <div class="btn-group btn-group-sm mr-2 " role="group">
            <a asp-controller="dashboard" asp-action="docs" class="btn btn-secondary" 
               data-intro="Con esta opción podra regresar a la lista principal">
                <i class="ti-back-left mr-2"></i> <span class="d-none d-sm-inline">Atrás</span>
            </a>
        </div>
    </div>
    <div class="col-6 text-right">
        <a asp-action="Create" asp-route-type="@ViewBag.docTipoId" class="btn btn-info btn-sm new-btn" data-toggle="tooltip" title="Nuevo Documento"
           data-modal="link", data-redirect="@Url.Action("Index", new {@a = Constantes.Creado, type = ViewBag.docTipoId})"
           data-intro="Click, en este botón para crear un Informe, una Nota, o cualquier otro tipo de documento">
            <i class="fas fa-plus"></i><span class="d-none d-sm-inline">&nbsp; Nuevo </span>
        </a>
    </div>
</div>
<div class="row mt-3">
    <div class="col-12">
        <form method="get" class="form form-search" data-intro="@intro_msg_search">
            <div class="input-group mb-3">
                <input name="filter" class="form-control search" placeholder="Buscar por Cite o Referencia..."
                       value="@Model.RouteValue["Filter"]"/>
                <input id="doc-tipo-id" type="hidden" name="type" value="@ViewBag.docTipoId"/>
                @* <input id="page-id" type="hidden" name="page" value="@ViewBag.page"/> *@
                <button type="submit" class="btn btn-secondary input-group-append">
                    <span class="fas fa-search" aria-hidden="true"></span>
                </button>
            </div>            
        </form>
    </div>
</div>
<div class="row justify-content-center">
    <div class="btn-group btn-group-sm" role="group" aria-label="Basic example">
        @foreach (TipoDocumento tipo in ViewBag.Tipos)
        {
            if (ViewBag.docTipoId == tipo.Id)
            {
                <button data-id="@tipo.Id" type="button" class="btn waves-effect waves-light btn-info active btn-tipo">@tipo.Nombre</button>
            }
           else
            {
                <button data-id="@tipo.Id" type="button" class="btn btn-secondary btn-tipo">@tipo.Nombre</button>
            }

        }
        
    </div>
</div>

<div class="row table-responsive mt-4" data-intro="En esta sección se muestra los resultados encontrados.">
    <table class="table table-hover table-striped small">
        <thead>
        <tr class="text-center">
            <th>Cite</th>
            <th>@Html.SortableHeaderFor(model => model.Fecha)</th>
            @* <th>Tipo</th> *@
            <th>De</th>
            <th>A</th>
            <th width="250px">Referencia</th>
            <th></th>
        </tr>

        </thead>
        @{int index = 0;}
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" title="Detalle" 
                       data-modal="link" data-modal-read="True">
                        @Html.DisplayFor(modelItem => item.Cite)
                    </a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Fecha)
                </td>
                @* <td> *@
                @*     @Html.DisplayFor(modelItem => item.Tipo.Nombre) *@
                @* </td> *@
                
                <td>
                    @Html.DisplayFor(modelItem => item.FuncionarioOrigen.Denominacion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FuncionarioDestino.Denominacion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Referencia)
                </td>
                 
                @{
                    options.CustomBtn = $@" <a href='/correspondencia/hojasrutainterna/create?idDoc={item.Id}' 
                                            data-toggle='tooltip' class='btn btn-secondary btn-outline-secondary waves-effect waves-light show-loader' 
                                            title='Crear Hoja de Ruta'><i class='ti-share'></i></a>";
                    options.Id = item.Id;
                    options.CanPrint = true;
                    options.UrlPrint = Url.Action("PrintDocument", new {id = item.Id});
                    options.ShowIntroMessages = index == 0 ? true : false;
                    index++;
                    
                }
               
                <partial name="_TableOptionsPartial" model="options"/>
            </tr>
        }
    </table>
    @if (Model.TotalRecordCount <= 0)
    {
        <partial name="_NotFoundPartial" />
    }
</div>
<div class="row justify-content-center">
    <nav>
        <vc:pager paging-list="@Model"/>
    </nav>
</div>

<script>
    $(document).ready(function() {
        $('.btn-tipo').click(function() {
            $('#doc-tipo-id').val($(this).data('id'));
            $('form.form-search').submit();
        });
    });
</script>    
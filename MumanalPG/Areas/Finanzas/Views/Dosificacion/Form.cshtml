@model MumanalPG.Models.Finanzas.Dosificacion
<form asp-action="@ViewData["Action"]">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input name="IsValid" type="hidden" value="@ViewData.ModelState.IsValid.ToString()" />
    <input type="hidden" asp-for="IdDosificacion" />
    @Html.HiddenFor(m => m.IdBeneficiario, new { id = "origen-id" })
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.IdDocumentoRespaldo, new { @class = "control-label" } )
        <br>
        @Html.DropDownListFor(m => m.IdDocumentoRespaldo, new SelectList(ViewBag.DocumentoRespaldo,"IdDocumentoRespaldo","Descripcion"), new { @class = "form-control" })
    </div>
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.NumeroAutorizacion, new { @class = "control-label" } )
        @Html.EditorFor(m => m.NumeroAutorizacion, new { htmlAttributes = new { @class = "form-control"}})
        @Html.ValidationMessageFor(m => m.NumeroAutorizacion, "" ,new { @class = "text-danger" })
    </div>
    <div class="form-group m-b-10">
        @Html.LabelFor(m => m.IdBeneficiario, new { @class = "control-label" } )
        <br>
        <select asp-for="IdBeneficiario" class="form-control remote" id="origen" placeholder="Escribir Nombre, Apellido o CI..."
            data-remote-url="@Url.Action("ListaBeneficiarios")">
        </select>
        @Html.ValidationMessageFor(m => m.IdBeneficiario, "" ,new { @class = "text-danger" })
    </div>
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.CorrelativoInicial, new { @class = "control-label" } )
        @Html.EditorFor(m => m.CorrelativoInicial, new { htmlAttributes = new { @class = "form-control"}})
        @Html.ValidationMessageFor(m => m.CorrelativoInicial, "" ,new { @class = "text-danger" })
    </div>
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.CorrelativoFinal, new { @class = "control-label" } )
        @Html.EditorFor(m => m.CorrelativoFinal, new { htmlAttributes = new { @class = "form-control"}})
        @Html.ValidationMessageFor(m => m.CorrelativoFinal, "" ,new { @class = "text-danger" })
    </div>
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.CorrelativoFactura, new { @class = "control-label" } )
        @Html.EditorFor(m => m.CorrelativoFactura, new { htmlAttributes = new { @class = "form-control"}})
        @Html.ValidationMessageFor(m => m.CorrelativoFactura, "" ,new { @class = "text-danger" })        
    </div>
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.FechaInicial, new { @class = "control-label" })
        @Html.EditorFor(m => m.FechaInicial, new { htmlAttributes = new { @class = "form-control"}})
        @Html.ValidationMessageFor(m => m.FechaInicial, "" ,new { @class = "text-danger" })
    </div>
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.FechaFinal, new { @class = "control-label" })
        @Html.EditorFor(m => m.FechaFinal, new { htmlAttributes = new { @class = "form-control"}})
        @Html.ValidationMessageFor(m => m.FechaFinal, "" ,new { @class = "text-danger" })
    </div>
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.FechaLimite, new { @class = "control-label" })
        @Html.EditorFor(m => m.FechaLimite, new { htmlAttributes = new { @class = "form-control"}})
        @Html.ValidationMessageFor(m => m.FechaLimite, "" ,new { @class = "text-danger" })
    </div>
    <div class="form-group m-b-40">
        @Html.LabelFor(m => m.DosificacionLlave, new { @class = "control-label" })
        @Html.TextAreaFor(m => m.DosificacionLlave, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.DosificacionLlave, "" ,new { @class = "text-danger" })
    </div>
</form>

<script>
$(document).ready(function() {
    // *Metodo Principal*
    var url = $('#origen').data('remote-url');
    $('#origen').selectize(getOptions());

    // *FUNCIONES*
    // Verifica si ya existen valores
    function verifyDefaultOptions() {
        if ($('#origen-id').val() > 0) {
            loadDefaultOptions();
        }
    }

    // Carga las opciones por default****
    function loadDefaultOptions() {
        console.log($('#origen-id').val());
        console.log("Prueba 1");
        $('#origen-selectized').val($('#origen-id').val().trim());
        $('#origen-selectized').attr("style", "width:100%");
        console.log("Prueba 2");
    }

    // Consigue los items/genera el filtro
    function getOptions() {
        return {
            valueField: 'id',
            labelField: 'carnet',
            searchField: ['nombre', 'apellido' ,'carnet'],
            create: false,
            render: {
                option: function(item, escape) {
                    $('.selectize-control.remote').removeClass('loading');
                    return '<div class="row"><div class="col">' + escape(item.carnet) + ' - ' + escape(item.apellido) + ', ' + escape(item.nombre) + '</div></div>';
                }
            },
            score: function(search) {
                var score = this.getScoreFunction(search);
                return function(item) {
                    return score(item);
                };
            },
            load: function(query, callback) {
                if (!query.length) return callback();
                $.ajax({
                    url: url + '?filter=' + encodeURIComponent(query),
                    type: 'GET',
                    error: function() {
                        callback();
                    },
                    success: function(res) {
                        try {
                            callback(res.repositories.slice(0,10));
                        } catch (e) {
                            
                        }  
                    }
                });
            },
            onInitialize: function(data) {
                verifyDefaultOptions();
            },
            onChange: function(selected) {
                var idElement = this.$input.attr('id');
                var dataSelected = this.options[selected];
                //console.log(dataSelected);
                $('#' + idElement + '-id').val(selected);
            }
        }
    }
      //});
});
</script>